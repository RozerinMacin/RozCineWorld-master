<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAAYAOIDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD80tKIaaIAFeBxmptfhX7R8o28An+tV9JbEsR9VH8q0Nc5nB/2
        B/KvKd1VR+gUoqWAkvNFS1bfJGeQuAQuentWzeQ/6GWAyMdfSsSz/wCWZ/2M11rRj+w5mIyVFc9aTjKL
        PXyuiqtGpFPo3+BxUS/vsg9Dz71u31uZdDEu7GOwFYML4lAx1rq7gY8J78ZwduK1rScXH1PPyylGpSrp
        9ItnGJCjA5Xk469q05Iytijgkc9KoLxzW3Io/sJJMfxYxW9STVjzMFSjKNRdotmHNGrMx2KSTkkjrWt4
        dh8xZByNoyKznwxPFbnhmHK3DegqK0rU3Y3y2ip4yJlX0amZmAwcn0/wrT8PxtIrbgCPTFU75f3mP73N
        dB4Xtt0LH046Vz1ZWpXPWy/Dupj7LzMjV4z9oGMqAelYckKmeQlc/Mf511erQbrpQeNz7awzDuV5P9sj
        H41rRn7iOTMMNetIsaDCZLrbkgKM1X1mFBeSnZ0bPQdz9K0NHkFncF3XgjHWoNSAuJLiQcDIx780uZ+1
        8ipUovAqN/euJpsYjnAOT6c4xVvXY/LtQVyDu9aZp8e66T/dDVo69Fu01X9+lYylaoj0aOHvgankczb7
        vtK5b68Vf14Zs4mPTAXC8VTtV3z7unPStDXMnTosjAyK6JP95E8mjTvg63oVfDtuk0kisiNjn5lBNRap
        GBcYX5RnoBxV7wzjzJm9BVHVJAbjOO9O7dZkyhGOW031bIJoo/sOfLXO7ritXQoFaxdiM7c4/pWZN/x4
        f8CrZ0NtmlynGaVZvk+ZeApx+txb/lMS4H7w44559629HXNqzEA1iXLfviP7xzXQ6SoTTS2c9qVb4DXL
        UvrUmulzKuwpupDtxxnoP8Ki0ZT9qTBOWJ57VLeYW4k+lLog/fQN9ar/AJds5uTmxkfX9T2jSdVMelWS
        7phthQfLPKB90dgcflRVLTWhOm2hO7PlJnk/3R70VvFuyCoqHOzxXT5NrRkdAB97itXViG8ptwLsgwo+
        nrRRWdRWmmc+Em3hZr0KVvE8e0MNmBjkj+hrr4287w7cEA9Onr9KKK5MRq16n0mTx9nKrBPTlf5HDhGj
        ZHPp05B/lXZNGZ/A/mRgOd+CqnJFFFVifsPzRx5L8WIh09nL9DjmjaMkMrr9VNa8uP8AhH4kXLOz/dA5
        /KiiuiXvWPMwkeRVbfysyWxu2g5fuuOa6rwnB+4uQw2HZkbhjP50UVjidINI78hipYpSfS5jXzL9oUZB
        GccHv6V1nhONTYzsSAytt2d80UVzYr3aOh7eQvmzNxfmHiDT2E0GxSz7+FXBYnGOmayLjw3qemwRpfaf
        c2ZmO6I3ELJ5gPORkciiisqEn7K56OaYWmsU7djKbdyHyPQdf5dK2PD/AIL17xfBdroei6hrDxAGRdPt
        ZJyg9TtBwKKK7nKyufIQ1lZhHpV5peqLaXdpNbXcYEclvMhR0bHcHnpg/jV/XbGb+xFkEbGPP3gKKK4q
        rtVifW4SjH6pWjfozkLXCzYP3c8tjit3xFa7/D9q8eWYjOFGeBxn8aKK66snGcbdz5vL4qeExKfYo+G4
        WhS7MiuhVMjcjYPpzjvWbewPcTFg0ajOcFwD+VFFaQd6kmcdSCeDpQe2pbj0S7vNNLW8f2gJ8zCEhyPw
        Bq1pavb6fJHNFJEWHy7125/Oiis+Zz5ovoz1KOEhRhSxEW7yjr27FSfwzqDRC78tfs3Xcrhj+QqaHUI7
        Cz8mfdGTyCVPNFFKnN1m4y6GWZYaOUNVcO23KN3fz+4qpH/at1Itu6l9udrHH5VJZwzaeFZ4JPkz1AAP
        60UVvLR8nQ8/Cx9tRWLbtLXbb8bnoul30jabaEAAGFOP+Aiiiiu1RVj5OWJq8z1/I//Z
</value>
  </data>
</root>